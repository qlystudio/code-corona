-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
	local physics = { data =
	{ 
		
		["Turbine"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "corona", density = 2, friction = 0.8, bounce = 0.4, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   91, 133  ,  20, 90  ,  70, 59  ,  122, 108  ,  121, 123  ,  107, 137  }
                    }
                     ,
                    {
                    pe_fixture_id = "corona", density = 2, friction = 0.8, bounce = 0.4, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -93, -133  ,  -15, -85  ,  -68, -55  ,  -125, -110  ,  -123, -124  ,  -110, -136  }
                    }
                     ,
                    {
                    pe_fixture_id = "corona", density = 2, friction = 0.8, bounce = 0.4, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   133, -109  ,  135, -100  ,  86, -20  ,  53, -69  ,  102, -119  ,  117, -123  }
                    }
                     ,
                    {
                    pe_fixture_id = "corona", density = 2, friction = 0.8, bounce = 0.4, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -138, 98  ,  -87, 16  ,  24, -83  ,  53, -69  ,  -56, 70  ,  -110, 125  ,  -127, 123  ,  -140, 110  }
                    }
                     ,
                    {
                    pe_fixture_id = "corona", density = 2, friction = 0.8, bounce = 0.4, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -30, 86  ,  -56, 70  ,  53, -69  ,  86, -20  ,  86, 23  ,  70, 59  ,  20, 90  }
                    }
                     ,
                    {
                    pe_fixture_id = "corona", density = 2, friction = 0.8, bounce = 0.4, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -15, -85  ,  24, -83  ,  -87, 16  ,  -86, -18  ,  -68, -55  }
                    }
                    
                    
                    
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
                for fi,fixture in ipairs(body) do
                    if(fixture.shape) then
                        for ci,coordinate in ipairs(fixture.shape) do
                            fixture.shape[ci] = s * coordinate
                        end
                    else
                        fixture.radius = s * fixture.radius
                    end
                end
        end
	
	function physics:get(name)
		return unpack(self.data[name])
	end

	function physics:getFixtureId(name, index)
                return self.data[name][index].pe_fixture_id
	end
	
	return physics;
end

return M

