-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
	local physics = { data =
	{ 
		
		["PlayerPlane_isolated"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "", density = 12, friction = 0.8, bounce = 0.01, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -30, -4.5  ,  -48, -4.5  ,  -44, -12.5  ,  -33, -13.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 12, friction = 0.8, bounce = 0.01, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   50, 4.5  ,  41, 7.5  ,  23, -2.5  ,  41, -3.5  ,  50, -0.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 12, friction = 0.8, bounce = 0.01, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   36, 12.5  ,  18, 12.5  ,  23, -2.5  ,  41, 7.5  ,  41, 10.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 12, friction = 0.8, bounce = 0.01, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -50, -3.5  ,  -48, -4.5  ,  -30, -4.5  ,  -21, 7.5  ,  -45, 5.5  ,  -49, 4.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 12, friction = 0.8, bounce = 0.01, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   10, 13.5  ,  -10, 11.5  ,  -21, 7.5  ,  -8, -6.5  ,  16, -9.5  ,  19, -8.5  ,  23, -2.5  ,  18, 12.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 12, friction = 0.8, bounce = 0.01, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   16, -9.5  ,  -8, -6.5  ,  -4, -8.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 12, friction = 0.8, bounce = 0.01, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -8, -6.5  ,  -21, 7.5  ,  -30, -4.5  }
                    }
                    
                    
                    
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
                for fi,fixture in ipairs(body) do
                    if(fixture.shape) then
                        for ci,coordinate in ipairs(fixture.shape) do
                            fixture.shape[ci] = s * coordinate
                        end
                    else
                        fixture.radius = s * fixture.radius
                    end
                end
        end
	
	function physics:get(name)
		return unpack(self.data[name])
	end

	function physics:getFixtureId(name, index)
                return self.data[name][index].pe_fixture_id
	end
	
	return physics;
end

return M

