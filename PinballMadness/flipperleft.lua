module(..., package.seeall)
-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

-- module(...)

function physicsData(scale)
	local physics = { data =
	{ 
		
		["flipperleft"] = {
			
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   38.8000030517578, 23.8999996185303,  33.1999969482422, 23.3000001907349  ,  44.5999984741211, 10.7000007629395  ,  44.1999969482422, 18.1000003814697  ,  42.8000030517578, 22.6999998092651  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   -3.20000076293945, 19.8999996185303,  40.5999984741211, -4.09999847412109  ,  43.1999969482422, -0.700000762939453  ,  44.5999984741211, 3.70000076293945  ,  44.5999984741211, 10.7000007629395  ,  33.1999969482422, 23.3000001907349  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   -51.8000001907349, 1.10000038146973,  -50.6000003814697, -7.5  ,  40.5999984741211, -4.09999847412109  ,  -3.20000076293945, 19.8999996185303  ,  -40.6000003814697, 16.1000003814697  ,  -47.2000007629395, 12.8999996185303  ,  -51.3999996185303, 7.29999923706055  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   -34, -25.0999984741211  ,  40.5999984741211, -4.09999847412109  ,  -50.6000003814697, -7.5  ,  -49.2000007629395, -15.0999984741211  ,  -46.2000007629395, -20.5  ,  -40.2000007629395, -24.5  }
				}  
		}
		
	} }



	-- apply scale factor
	local s = scale or 1.0
	for bi,body in pairs(physics.data) do
		for fi,fixture in ipairs(body) do
			for ci,coordinate in ipairs(fixture.shape) do
				fixture.shape[ci] = s * coordinate
			end
		end
	end
	
	function physics:get(name)
		return unpack(self.data[name])
	end
	
	return physics;
end


