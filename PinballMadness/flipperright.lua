module(..., package.seeall)
-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

-- module(...)

function physicsData(scale)
	local physics = { data =
	{ 
		
		["flipperright"] = {
			
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   -44.5862083435059, 19.2241382598877  ,  -44.5862083435059, 13.7068977355957  ,  -42.8620700836182, 0.775863647460938  ,  31.2758636474609, -24.9137916564941  ,  52.6551666259766, -6.12068939208984  ,  -12.8620719909668, 20.6034488677979  ,  -37.6896553039551, 22.8448276519775  ,  -43.3793106079102, 22.6724138259888  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   -42.8620700836182, 0.775863647460938  ,  -44.5862083435059, 13.7068977355957  ,  -45.1034488677979, 7.32758712768555  ,  -45.1034488677979, 3.01724243164062  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   47.8275833129883, -20.258617401123  ,  50.9310302734375, -14.0517234802246  ,  52.6551666259766, -6.12068939208984  ,  31.2758636474609, -24.9137916564941  ,  42.1379241943359, -24.9137916564941  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   48.8620681762695, 11.982759475708  ,  44.7241363525391, 16.2931041717529  ,  52.6551666259766, -6.12068939208984  ,  51.9655151367188, 3.7068977355957  ,  51.4482727050781, 7.84482765197754  }
				}  ,
				{
					density = 2, friction = 0, bounce = 0, 
					filter = { categoryBits = 1, maskBits = 65535 },
					shape = {   52.6551666259766, -6.12068939208984  ,  44.7241363525391, 16.2931041717529  ,  -12.8620719909668, 20.6034488677979  }
				}  
		}
		
	} }

	-- apply scale factor
	local s = scale or 1.0
	for bi,body in pairs(physics.data) do
		for fi,fixture in ipairs(body) do
			for ci,coordinate in ipairs(fixture.shape) do
				fixture.shape[ci] = s * coordinate
			end
		end
	end
	
	function physics:get(name)
		return unpack(self.data[name])
	end
	
	return physics;
end


